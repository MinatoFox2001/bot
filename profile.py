from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton, CallbackQuery, Message
from database import update_purchase_balance, update_referral_balance, transfer_referral_to_purchase_balance
from shared import bot
from messages import get_profile_text, get_subscription_info_text
from datetime import datetime
from config import ROOT_ADMIN_ID, TIMEZONE

# –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã—Ö —Å—Ä–µ–¥—Å—Ç–≤
MIN_REFERRAL_WITHDRAWAL = 10

# –û–±–Ω–æ–≤–∏–º —Ñ—É–Ω–∫—Ü–∏—é get_profile_keyboard()
def get_profile_keyboard(user_id: int) -> InlineKeyboardMarkup:
    buttons = [
        [InlineKeyboardButton(text="üí≥ –ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å (+100 —Ä—É–±.)", callback_data="deposit")],
        [InlineKeyboardButton(text="üíé –ü–æ–¥–ø–∏—Å–∫–∏", callback_data="subscriptions")],
        [InlineKeyboardButton(text="üë• –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞", callback_data="referral")],
        [InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="back_to_main")]
    ]
    return InlineKeyboardMarkup(inline_keyboard=buttons)

async def show_profile(callback: CallbackQuery, bot_instance):
    user = get_user(callback.from_user.id)
    if not user:
        # –ü—ã—Ç–∞–µ–º—Å—è –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ
        try:
            await callback.message.edit_text(
                "‚ùå –ü—Ä–æ—Ñ–∏–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞ –∫–æ–º–∞–Ω–¥–æ–π /start",
                reply_markup=InlineKeyboardMarkup(inline_keyboard=[
                    [InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="back_to_main")]
                ])
            )
        except Exception:
            # –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            await callback.message.answer(
                "‚ùå –ü—Ä–æ—Ñ–∏–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞ –∫–æ–º–∞–Ω–¥–æ–π /start",
                reply_markup=InlineKeyboardMarkup(inline_keyboard=[
                    [InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="back_to_main")]
                ])
            )
            try:
                await callback.message.delete()
            except:
                pass
        return

    
    try:
        profile_text = get_profile_text(user)
        sub_text = get_subscription_info_text(user)
        full_text = f"{profile_text}\n\n{sub_text}"
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ –ø—Ä–æ—Ñ–∏–ª—è: {str(e)}")
        full_text = "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø—Ä–æ—Ñ–∏–ª—è"

    try:
        keyboard = get_profile_keyboard(callback.from_user.id)
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã: {str(e)}")
        keyboard = InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="back_to_main")]
        ])

    # –ü—ã—Ç–∞–µ–º—Å—è –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ
    try:
        await callback.message.edit_text(
            text=full_text,
            reply_markup=keyboard
        )
    except Exception:
        # –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        await callback.message.answer(
            text=full_text,
            reply_markup=keyboard
        )
        try:
            await callback.message.delete()
        except:
            pass

async def deposit_balance(callback: CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞ –Ω–∞ 100 —Ä—É–±–ª–µ–π"""
    from database import update_purchase_balance, get_user
    from messages import get_profile_text, get_subscription_info_text
    
    user_id = callback.from_user.id
    
    try:
        # –ü–æ–ø–æ–ª–Ω—è–µ–º –±–∞–ª–∞–Ω—Å –¥–ª—è –ø–æ–∫—É–ø–æ–∫ –Ω–∞ 100 —Ä—É–±–ª–µ–π
        update_purchase_balance(user_id, 100)
        
        # –ü–æ–ª—É—á–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
        user = get_user(user_id)
        
        if user:
            # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è —Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ–º –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è
            profile_text = get_profile_text(user)
            sub_text = get_subscription_info_text(user)
            full_text = f"{profile_text}\n\n{sub_text}"
            
            # –î–æ–±–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–∏
            full_text += "\n\n‚úÖ –ë–∞–ª–∞–Ω—Å –¥–ª—è –ø–æ–∫—É–ø–æ–∫ —É—Å–ø–µ—à–Ω–æ –ø–æ–ø–æ–ª–Ω–µ–Ω –Ω–∞ 100 —Ä—É–±.!"
            
            await callback.message.edit_text(
                text=full_text,
                reply_markup=get_profile_keyboard(user_id)
            )
        else:
            await callback.answer("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –ø—Ä–æ—Ñ–∏–ª—è", show_alert=True)
            
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–∏ –±–∞–ª–∞–Ω—Å–∞: {e}")
        await callback.answer("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–∏ –±–∞–ª–∞–Ω—Å–∞", show_alert=True)
        return
    
    await callback.answer("üí≥ –ë–∞–ª–∞–Ω—Å –¥–ª—è –ø–æ–∫—É–ø–æ–∫ —É—Å–ø–µ—à–Ω–æ –ø–æ–ø–æ–ª–Ω–µ–Ω –Ω–∞ 100 —Ä—É–±.!")

async def handle_exchange_referral_balance(callback: CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ–±–º–µ–Ω–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–≥–æ –±–∞–ª–∞–Ω—Å–∞ –Ω–∞ –±–∞–ª–∞–Ω—Å –ø–æ–∫—É–ø–æ–∫"""
    from database import get_user, transfer_referral_to_purchase_balance
    from messages import get_referral_message
    
    user_id = callback.from_user.id
    
    try:
        user = get_user(user_id)
        if not user:
            await callback.answer("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω", show_alert=True)
            return
            
        referral_balance = user.get('referral_balance', 0)
        
        if referral_balance <= 0:
            await callback.answer("–£ –≤–∞—Å –Ω–µ—Ç —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–º –±–∞–ª–∞–Ω—Å–µ –¥–ª—è –æ–±–º–µ–Ω–∞", show_alert=True)
            return
        
        # –ü–µ—Ä–µ–≤–æ–¥–∏–º –≤—Å–µ —Å—Ä–µ–¥—Å—Ç–≤–∞ —Å —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–≥–æ –±–∞–ª–∞–Ω—Å–∞ –Ω–∞ –±–∞–ª–∞–Ω—Å –ø–æ–∫—É–ø–æ–∫
        if transfer_referral_to_purchase_balance(user_id, referral_balance):
            await callback.answer(f"‚úÖ –£—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ–≤–µ–¥–µ–Ω–æ {referral_balance} —Ä—É–±. —Å —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–≥–æ –±–∞–ª–∞–Ω—Å–∞ –Ω–∞ –±–∞–ª–∞–Ω—Å –ø–æ–∫—É–ø–æ–∫!", show_alert=True)
            
            # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º—ã
            user = get_user(user_id)  # –ü–æ–ª—É—á–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
            await callback.message.edit_text(
                text=get_referral_message(user_id),
                reply_markup=InlineKeyboardMarkup(inline_keyboard=[
                    [InlineKeyboardButton(text="üí± –û–±–º–µ–Ω—è—Ç—å –Ω–∞ –±–∞–ª–∞–Ω—Å –ø–æ–∫—É–ø–æ–∫", callback_data="exchange_referral_balance")],
                    [InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="back_to_profile")]
                ])
            )
        else:
            await callback.answer("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–≤–æ–¥–µ —Å—Ä–µ–¥—Å—Ç–≤", show_alert=True)
            
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–º–µ–Ω–µ –±–∞–ª–∞–Ω—Å–∞: {e}")
        await callback.answer("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–º–µ–Ω–µ –±–∞–ª–∞–Ω—Å–∞", show_alert=True)

async def handle_referral_withdrawal_request(callback: CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ –≤—ã–≤–æ–¥ —Å—Ä–µ–¥—Å—Ç–≤"""
    from database import get_user
    
    user_id = callback.from_user.id
    user = get_user(user_id)
    
    if not user:
        await callback.answer("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω", show_alert=True)
        return
    
    referral_balance = user.get('referral_balance', 0)
    
    if referral_balance < MIN_REFERRAL_WITHDRAWAL:
        await callback.answer(f"–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞: {MIN_REFERRAL_WITHDRAWAL} —Ä—É–±.", show_alert=True)
        return
    
    # –£—Å—Ç–∞–Ω–æ–≤–∏–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è –≤–≤–æ–¥–∞ —Å—É–º–º—ã
    from state import admin_states
    admin_states[user_id] = 'waiting_for_withdrawal_amount'
    
    await callback.message.edit_text(
        f"–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –¥–ª—è –≤—ã–≤–æ–¥–∞ (–º–∞–∫—Å–∏–º—É–º: {referral_balance} —Ä—É–±.):\n"
        f"–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞: {MIN_REFERRAL_WITHDRAWAL} —Ä—É–±.\n\n"
        f"–ò–ª–∏ –≤–≤–µ–¥–∏—Ç–µ 'cancel' –¥–ª—è –æ—Ç–º–µ–Ω—ã.",
        reply_markup=InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="referral")]
        ])
    )
    await callback.answer()

async def process_withdrawal_amount(message: Message):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–µ–¥–µ–Ω–Ω–æ–π —Å—É–º–º—ã –≤—ã–≤–æ–¥–∞"""
    from database import get_user, update_referral_balance
    from state import admin_states
    from shared import bot
    from datetime import datetime, timedelta
    from config import ROOT_ADMIN_ID, TIMEZONE
    
    user_id = message.from_user.id
    user = get_user(user_id)
    
    if not user:
        await message.answer("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return
    
    referral_balance = user.get('referral_balance', 0)
    
    try:
        amount = float(message.text)
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∏
        if amount < MIN_REFERRAL_WITHDRAWAL:
            await message.answer(f"–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞: {MIN_REFERRAL_WITHDRAWAL} —Ä—É–±.")
            return
            
        if amount > referral_balance:
            await message.answer(f"–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤. –î–æ—Å—Ç—É–ø–Ω–æ: {referral_balance} —Ä—É–±.")
            return
            
        if amount <= 0:
            await message.answer("–°—É–º–º–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–π")
            return
        
        # –°–Ω–∏–º–∞–µ–º —Å—Ä–µ–¥—Å—Ç–≤–∞ —Å —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–≥–æ –±–∞–ª–∞–Ω—Å–∞
        update_referral_balance(user_id, -int(amount))
        
        # –£–¥–∞–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        if user_id in admin_states:
            del admin_states[user_id]
        
        # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è —Å —É—á–µ—Ç–æ–º —á–∞—Å–æ–≤–æ–≥–æ –ø–æ—è—Å–∞
        current_time = (datetime.now() + timedelta(hours=TIMEZONE)).strftime('%d.%m.%Y %H:%M')
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≥–ª–∞–≤–Ω–æ–º—É –∞–¥–º–∏–Ω—É
        try:
            admin_message = (
                f"üí∞ <b>–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ –≤—ã–≤–æ–¥ —Å—Ä–µ–¥—Å—Ç–≤!</b>\n\n"
                f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: <code>{user_id}</code>\n"
                f"üë§ –ò–º—è: {user.get('full_name', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}\n"
                f"{'üë§ Username: @' + str(user.get('username', '–ù–µ —É–∫–∞–∑–∞–Ω')) if user.get('username') else 'üë§ Username: –ù–µ —É–∫–∞–∑–∞–Ω'}\n"
                f"üí∏ –°—É–º–º–∞: <b>{amount} —Ä—É–±.</b>\n"
                f"üìÖ –í—Ä–µ–º—è: {current_time}\n\n"
                f"–î–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞—è–≤–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É:\n"
                f"<code>/user {user_id} balance {int(amount)}</code> - –¥–ª—è –∑–∞—á–∏—Å–ª–µ–Ω–∏—è —Å—Ä–µ–¥—Å—Ç–≤\n"
                f"–∏–ª–∏ –≤—Ä—É—á–Ω–æ–π –ø–µ—Ä–µ–≤–æ–¥ —á–µ—Ä–µ–∑ –ø–ª–∞—Ç–µ–∂–Ω—É—é —Å–∏—Å—Ç–µ–º—É"
            )
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≥–ª–∞–≤–Ω–æ–º—É –∞–¥–º–∏–Ω—É
            if ROOT_ADMIN_ID:
                await bot.send_message(
                    chat_id=ROOT_ADMIN_ID,
                    text=admin_message,
                    parse_mode="HTML"
                )
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω—É: {e}")
        
        await message.answer(
            f"‚úÖ –ó–∞—è–≤–∫–∞ –Ω–∞ –≤—ã–≤–æ–¥ —Å—Ä–µ–¥—Å—Ç–≤ –ø—Ä–∏–Ω—è—Ç–∞!\n\n"
            f"–°—É–º–º–∞: {amount} —Ä—É–±.\n"
            f"–°—Ç–∞—Ç—É—Å: –í –æ–±—Ä–∞–±–æ—Ç–∫–µ\n\n"
            f"–°—Ä–µ–¥—Å—Ç–≤–∞ –±—É–¥—É—Ç –ø–µ—Ä–µ–≤–µ–¥–µ–Ω—ã –≤ —Ç–µ—á–µ–Ω–∏–µ 3 —Ä–∞–±–æ—á–∏—Ö –¥–Ω–µ–π.",
            reply_markup=InlineKeyboardMarkup(inline_keyboard=[
                [InlineKeyboardButton(text="üë§ –ü—Ä–æ—Ñ–∏–ª—å", callback_data="profile")]
            ])
        )
        
        # –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        from messages import get_profile_text, get_subscription_info_text
        from profile import get_profile_keyboard
        
        updated_user = get_user(user_id)
        profile_text = get_profile_text(updated_user)
        sub_text = get_subscription_info_text(updated_user)
        full_text = f"{profile_text}\n\n{sub_text}"
        
        # –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è
        from bot import profile_message_ids
        if user_id in profile_message_ids:
            try:
                await message.bot.edit_message_text(
                    chat_id=message.chat.id,
                    message_id=profile_message_ids[user_id],
                    text=full_text,
                    reply_markup=get_profile_keyboard(user_id)
                )
            except:
                pass
        
    except ValueError:
        await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Å—É–º–º—É (—á–∏—Å–ª–æ)")
    except Exception as e:
        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏
        if user_id in admin_states:
            admin_states[user_id] = 'waiting_for_withdrawal_amount'
        await message.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞—è–≤–∫–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.")
        print(f"–û—à–∏–±–∫–∞ –≤ process_withdrawal_amount: {e}")

async def show_referral_program(callback: CallbackQuery):
    from messages import get_referral_message
    from database import get_user
    
    try:
        user = get_user(callback.from_user.id)
        if not user:
            await callback.answer("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω", show_alert=True)
            return
            
        referral_balance = user.get('referral_balance', 0)
        
        keyboard_buttons = []
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –æ–±–º–µ–Ω–∞, –µ—Å–ª–∏ –µ—Å—Ç—å —Å—Ä–µ–¥—Å—Ç–≤–∞ –Ω–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–º –±–∞–ª–∞–Ω—Å–µ
        if referral_balance > 0:
            keyboard_buttons.append([InlineKeyboardButton(text="üí± –û–±–º–µ–Ω—è—Ç—å –Ω–∞ –±–∞–ª–∞–Ω—Å –ø–æ–∫—É–ø–æ–∫", callback_data="exchange_referral_balance")])
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –≤—ã–≤–æ–¥–∞ —Å—Ä–µ–¥—Å—Ç–≤ (–ø—Ä–æ–≤–µ—Ä–∫–∞ –±—É–¥–µ—Ç –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏)
        keyboard_buttons.append([InlineKeyboardButton(text="üí∏ –í—ã–≤–æ–¥ —Å—Ä–µ–¥—Å—Ç–≤", callback_data="referral_withdrawal")])
        
        keyboard_buttons.append([InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="back_to_profile")])
        
        await callback.message.edit_text(
            text=get_referral_message(callback.from_user.id),
            reply_markup=InlineKeyboardMarkup(inline_keyboard=keyboard_buttons)
        )
        await callback.answer()
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –≤ show_referral_program: {e}")
        await callback.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º—ã")

__all__ = ['get_profile_keyboard', 'show_profile', 'deposit_balance', 'show_referral_program', 
           'handle_exchange_referral_balance', 'handle_referral_withdrawal_request', 'process_withdrawal_amount']
